{"version":3,"sources":["variables/actionTypes.jsx","serviceWorker.js","variables/host.js","actions/news.action.js","utils/callApi.js","utils/formatDate.js","views/Home.jsx","routes/index.jsx","views/Contact.jsx","views/AboutUs.jsx","components/Header.jsx","layout/LayoutApp.jsx","reducers/news.reducer.js","reducers/index.reducer.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","GET_NEWS","unregister","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","HOST","actGetNews","dispatch","endpoint","method","arguments","length","undefined","data","form_data","axios","url","concat","headers","access_token","localStorage","getItem","content-type","res","callApi","actGetListNew","dataNews","type","Types","require","Home","state","this","props","getNews","news","dataReducer","react_default","a","createElement","className","Row","map","key","Col","md","xs","style","backgroundColor","color","padding","border","marginBottom","name","position","shares","dateString","created_at","moment","format","Component","indexRoutes","path","component","connect","newsReducer","redirect","pathTo","Header","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","isOpen","setState","Navbar","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","react_router_dom","to","LayoutApp","components_Header","react_router","prop","from","initialState","userReducer","action","objectSpread","appReducers","combineReducers","r","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_serviceWorker__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","_reducers_index_reducer__WEBPACK_IMPORTED_MODULE_5__","redux__WEBPACK_IMPORTED_MODULE_6__","redux_thunk__WEBPACK_IMPORTED_MODULE_7__","history__WEBPACK_IMPORTED_MODULE_10__","_layout_LayoutApp__WEBPACK_IMPORTED_MODULE_11__","$","jQuery","hist","createBrowserHistory","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","history","document","getElementById"],"mappings":"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","file":"static/js/main.a750a5fc.chunk.js","sourcesContent":["export const GET_NEWS= \"GET_NEWS\";\nexport const GET_LISTCONTACT = \"GET_LISTCONTACT\";\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","var HOST = \"\";\nif (\n  window.location.hostname === \"localhost\" ||\n  window.location.hostname === \"[::1]\" ||\n  window.location.hostname.match(\n    /^192(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n) {\n  HOST = \"http://private-2063bf-chungvu.apiary-mock.com\";\n} else {\n  HOST = \"http://private-2063bf-chungvu.apiary-mock.com\";\n  // window.location.protocol + \"//\" + window.location.hostname + \"/cms/api\";\n}\n\nexport default HOST;\n","import * as Types from \"../variables/actionTypes\";\nimport callApi from \"../utils/callApi\";\nexport const actGetNews = () => {\n  return dispatch => {\n    return callApi(`news`, \"GET\").then(res => {\n      dispatch(actGetListNew(res));\n    });\n  };\n};\nexport const actGetListNew = dataNews => {\n  return {\n    type: Types.GET_NEWS,\n    dataNews\n  };\n};\n","import axios from \"axios\";\nimport HOST from \"../variables/host\";\n\nexport default function callApi(\n  endpoint,\n  method = \"GET\",\n  data = null,\n  form_data = false\n) {\n  return axios({\n    method: method,\n    url: `${HOST}/${endpoint}`,\n    data: data,\n    headers: {\n      access_token: localStorage.getItem(\"access_token\"),\n      \"content-type\": !form_data\n        ? \"application/json;charset=UTF-8\"\n        : \"multipart/form-data\"\n    }\n  }).then(res => {\n    return res.data;\n  });\n  // .catch(err => {\n  //   if (!err.response) {\n  //     window.location.href = \"/dang-nhap\";\n  //   } else {\n  //     const status = err.response.data.status;\n  //     if (status === 403) window.location.href = \"/dang-nhap\";\n  //   }\n  // });\n}\n","import moment from \"moment\";\nimport formatNumber from \"./formatNumber\";\nrequire(\"moment/locale/vi\");\n\nexport const formatStringToDate = dateString => {\n  const date = moment(dateString).format(\"L\");\n  return date;\n};\n\nexport const formatStringToTime = dateString => {\n  const date = moment(dateString).locale(\"vi\");\n  console.log(\n    date,\n    date.hour(),\n    date.minute(),\n    date.date(),\n    date.month(),\n    date.year()\n  );\n  return (\n    formatNumber(date.hour()) +\n    \":\" +\n    formatNumber(date.minute()) +\n    \" \" +\n    formatNumber(date.date()) +\n    \"/\" +\n    formatNumber(date.month() + 1) +\n    \"/\" +\n    formatNumber(date.year())\n  );\n};\n\nexport const countTime = dateString => {\n  const date = new moment(dateString).fromNow();\n  return date;\n};\n","import React, { Component } from \"react\";\nimport { actGetNews } from \"../actions/news.action\";\nimport { connect } from \"react-redux\";\nimport { Row, Col } from \"reactstrap\";\nimport { formatStringToDate } from \"../utils/formatDate\";\nclass Home extends Component {\n  state = {};\n  componentDidMount() {\n    this.props.getNews();\n  }\n  render() {\n    const { news } = this.props.dataReducer;\n    return (\n      <div className=\"views_home\">\n        <Row>\n          {news.data &&\n            news.data.length > 0 &&\n            news.data.map((props, key) => {\n              return (\n                <Col md=\"4\" xs=\"12\" key={key}>\n                  <div\n                    style={{\n                      backgroundColor: \"gray\",\n                      color: \"white\",\n                      padding: \"10px\",\n                      border: \"black solid 1px\",\n                      marginBottom: \"10px\"\n                    }}\n                  >\n                    <p>Tên:{props.name}</p>\n                    <p>Vị trí:{props.position}</p>\n                    <p>Cổ Phần:{props.shares}</p>\n                    <p>Ngày Tạo:{formatStringToDate(props.created_at)}</p>\n                  </div>\n                </Col>\n              );\n            })}\n        </Row>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    dataReducer: state.newsReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getNews: () => {\n      dispatch(actGetNews());\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import Home from \"../views/Home\";\nimport Contact from \"../views/Contact\";\nimport AboutUs from \"../views/AboutUs\";\n\nvar indexRoutes = [\n  { path: \"/home\", name: \"Feature\", component: Home },\n  { path: \"/contact\", name: \"Contact\", component: Contact },\n  { path: \"/about-us\", name: \"About Us\", component: AboutUs },\n  {\n    redirect: true,\n    path: \"/\",\n    pathTo: \"/home\",\n    name: \"Home\"\n  }\n];\n\nexport default indexRoutes;\n","import React, { Component } from \"react\";\n\nclass Contact extends Component {\n  state = {};\n\n  render() {\n    return <div>Contact</div>;\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\n\nclass AboutUs extends Component {\n  state = {};\n\n  render() {\n    return <div>About Us</div>;\n  }\n}\n\nexport default AboutUs;\n","import React, { Component } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem\n} from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\">REACT - THUNK</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/home\">\n                  HOME\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/contact\">\n                  Contact\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/about-us\">\n                  About Us\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport indexRoutes from \"../routes\";\nimport Header from \"../components/Header\";\n\nclass LayoutApp extends Component {\n  state = {};\n\n  render() {\n    const props = this.props;\n    return (\n      <div>\n        <Header {...props} />\n        <Switch>\n          {indexRoutes.map((prop, key) => {\n            if (prop.redirect)\n              return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n            return (\n              <Route path={prop.path} component={prop.component} key={key} />\n            );\n          })}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default LayoutApp;\n","/* eslint-disable no-redeclare */\n/* eslint-disable no-case-declarations */\nimport * as Types from \"../variables/actionTypes\";\nvar initialState = {\n  news: []\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Types.GET_NEWS:\n      state = { ...state, news: action.dataNews };\n      return state;\n    default:\n      return { ...state };\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\nimport newsReducer from \"./news.reducer\";\n\nconst appReducers = combineReducers({\n  newsReducer\n});\n\nexport default appReducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { Router } from \"react-router-dom\";\nimport appReducers from \"./reducers/index.reducer\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport \"./assets/scss/index.scss\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { createBrowserHistory } from \"history\";\nimport LayoutApp from \"./layout/LayoutApp\";\n\nrequire(\"moment/locale/vi\");\nvar $ = require(\"jquery\");\nglobal.jQuery = require(\"jquery\");\nwindow.$ = $;\nconst hist = createBrowserHistory();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(appReducers, composeEnhancer(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={hist}>\n      <LayoutApp history={hist} />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}